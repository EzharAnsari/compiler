
LINE -> from RELATIONS where COND select COLUMNLIST
    | from RELATIONS select COLUMNLIST

RELATIONS -> TABLE
    | TABLE JOINCONDITION 

TABLE -> id     // from Orders 

COLUMNLIST -> SIMPLELIST | * | OBJECTTYPECOLUMN

SIMPLELIST -> TABLE
    | TABLE ',' SIMPLELIST

OBJECTTYPECOLUMN -> TABLE '.' id    //  Orders.OrderId, Customers.CustomerName
    | TABLE '.' id ',' OBJECTTYPECOLUMN
    | TABLE '.' id ',' as id   //  tableName.id, tableName.title, tableName.last_name AS editor

IDENTIFIERS -> id
  | id ',' IDENTIFIERS

CONDITION -> OBJECT OPRATOR OBJECT
  | OBJECT OPRATOR OBJECT LOGICALOPERATOR CONDITION
  | ( CONDITION LOGICALOPERATOR CONDITION )
  | OBJECT in ARRAYOFCONSTANT

CONSTANT -> string
  | int
  | float

ARRAYOFCONSTANT -> CONSTANT
  | CONSTANT ',' ARRAYOFCONSTANT

OPRATOR -> '<'
  | '='
  | '>'
  | '>='
  | '<='
  | like
  | is
  | not

OBJECT -> TABLE
    | TABLE '.' id
    | CONSTANT

LOGICALOPERATOR -> and
  | or

JOINTYPE -> inner
  | left
  | right
  | full

JOINCONDITION -> JOINTYPE join TABLE on CONDITION
    | JOINTYPE join TABLE on CONDITION JOINCONDITION


/** example ***/
1. from Table1 T1 left join Table2 T2 on T1.column11 = T2.column21 select T1.column12, T1.column13, T2.column22, T2.column23
output =>
"SELECT T1.column12, T1.column13, T2.column22, T2.column23 FROM Table1 T1 LEFT JOIN Table2 T2 ON T1.column11 = T2.column21"


2. from { Table1 T1 }
  left join Table2 T2
  on T1.column11 = T2.column21
  select { T1.column12, T1.column13, T2.column22, T2.column23 as Table3 }



from user
  left join record 
    on user.userid = record.userid 
      select col1, col2

result will be (IR)

// Interemediate Representation
IR {
  type: queryExpression,
  from: fromClause
}

fromClause {
  type : 'fromClause',
  identifier : { type: 'ID', value: 'user' }, // Token
  then : JoinIntoClause 
}

JoinIntoClause {
  type : 'JoinIntoClause'
  identifier : { type: 'ID', value: 'record' }, // Token
  left : MemberExpression,
  right : MemberExpression,
  then : SelectClause
}

// left 
MemberExpression {
  type: MemberExpression.
  object : { type: 'ID', value: 'user' },
  property : { type: 'ID', value: 'userid' },
}

// right
MemberExpression {
  type: MemberExpression.
  object : { type: 'ID', value: 'record' },
  property : { type: 'ID', value: 'userid' },
}

SelectClause {
  type : SelectClause,
  expression : ObjectExpression
}

ObjectExpression {
  type : ObjectExpression,
  properties : Array(2)
    0: col1,
    1: col2
}